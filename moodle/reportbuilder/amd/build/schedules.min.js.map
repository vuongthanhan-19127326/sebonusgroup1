{"version":3,"sources":["../src/schedules.js"],"names":["initialized","init","reportId","document","addEventListener","event","scheduleCreate","target","closest","reportSelectors","actions","preventDefault","scheduleModal","events","FORM_SUBMITTED","then","addToast","reportElement","querySelector","regions","report","reportEvents","tableReload","catch","Notification","exception","show","scheduleToggle","pendingPromise","Pending","scheduleStateToggle","dataset","state","id","tableRow","classList","toggle","resolve","scheduleEdit","scheduleId","scheduleSend","saveCancelPromise","scheduleName","scheduleDelete","preservePagination"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder audiences\n *\n * @module      core_reportbuilder/schedules\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {createScheduleModal} from 'core_reportbuilder/local/repository/modals';\nimport {deleteSchedule, sendSchedule, toggleSchedule} from 'core_reportbuilder/local/repository/schedules';\n\nlet initialized = false;\n\n/**\n * Initialise schedules tab\n *\n * @param {Number} reportId\n */\nexport const init = reportId => {\n    prefetchStrings('core_reportbuilder', [\n        'deleteschedule',\n        'deletescheduleconfirm',\n        'editscheduledetails',\n        'newschedule',\n        'schedulecreated',\n        'scheduledeleted',\n        'schedulesent',\n        'scheduleupdated',\n        'sendschedule',\n        'sendscheduleconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'confirm',\n        'delete',\n    ]);\n\n    if (initialized) {\n        // We already added the event listeners (can be called multiple times by mustache template).\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Create schedule.\n        const scheduleCreate = event.target.closest(reportSelectors.actions.scheduleCreate);\n        if (scheduleCreate) {\n            event.preventDefault();\n\n            const scheduleModal = createScheduleModal(event.target, getString('newschedule', 'core_reportbuilder'), reportId);\n            scheduleModal.addEventListener(scheduleModal.events.FORM_SUBMITTED, () => {\n                getString('schedulecreated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        const reportElement = document.querySelector(reportSelectors.regions.report);\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                        return;\n                    })\n                    .catch(Notification.exception);\n            });\n\n            scheduleModal.show();\n        }\n\n        // Toggle schedule.\n        const scheduleToggle = event.target.closest(reportSelectors.actions.scheduleToggle);\n        if (scheduleToggle) {\n            const pendingPromise = new Pending('core_reportbuilder/schedules:toggle');\n            const scheduleStateToggle = +!Number(scheduleToggle.dataset.state);\n\n            toggleSchedule(reportId, scheduleToggle.dataset.id, scheduleStateToggle)\n                .then(() => {\n                    const tableRow = scheduleToggle.closest('tr');\n                    tableRow.classList.toggle('dimmed_text');\n\n                    scheduleToggle.dataset.state = scheduleStateToggle;\n\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Edit schedule.\n        const scheduleEdit = event.target.closest(reportSelectors.actions.scheduleEdit);\n        if (scheduleEdit) {\n            event.preventDefault();\n\n            const scheduleModal = createScheduleModal(scheduleEdit, getString('editscheduledetails', 'core_reportbuilder'),\n                reportId, scheduleEdit.dataset.scheduleId);\n            scheduleModal.addEventListener(scheduleModal.events.FORM_SUBMITTED, () => {\n                getString('scheduleupdated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        const reportElement = scheduleEdit.closest(reportSelectors.regions.report);\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                        return;\n                    })\n                    .catch(Notification.exception);\n            });\n\n            scheduleModal.show();\n        }\n\n        // Send schedule.\n        const scheduleSend = event.target.closest(reportSelectors.actions.scheduleSend);\n        if (scheduleSend) {\n            event.preventDefault();\n\n            Notification.saveCancelPromise(\n                getString('sendschedule', 'core_reportbuilder'),\n                getString('sendscheduleconfirm', 'core_reportbuilder', scheduleSend.dataset.scheduleName),\n                getString('confirm', 'core')\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/schedules:send');\n\n                return sendSchedule(reportId, scheduleSend.dataset.scheduleId)\n                    .then(addToast(getString('schedulesent', 'core_reportbuilder')))\n                    .then(() => pendingPromise.resolve())\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n\n        // Delete schedule.\n        const scheduleDelete = event.target.closest(reportSelectors.actions.scheduleDelete);\n        if (scheduleDelete) {\n            event.preventDefault();\n\n            Notification.saveCancelPromise(\n                getString('deleteschedule', 'core_reportbuilder'),\n                getString('deletescheduleconfirm', 'core_reportbuilder', scheduleDelete.dataset.scheduleName),\n                getString('delete', 'core')\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/schedules:delete');\n\n                return deleteSchedule(reportId, scheduleDelete.dataset.scheduleId)\n                    .then(addToast(getString('scheduledeleted', 'core_reportbuilder')))\n                    .then(() => {\n                        const reportElement = scheduleDelete.closest(reportSelectors.regions.report);\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    initialized = true;\n};\n"],"file":"schedules.min.js"}